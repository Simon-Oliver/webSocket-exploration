{"ast":null,"code":"var _jsxFileName = \"/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Modals/Modal/index.js\";\nimport React from 'react';\nimport '../Modal/Modal.css';\nexport default class Modal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toggleModal = e => {\n      if (e.target.id === 'modalBG') {\n        this.props.toggle();\n      }\n    };\n  }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      id: \"modalBG\",\n      className: \"modal-background \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-container\",\n      onClick: e => this.toggleModal(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Modals/Modal/index.js"],"names":["React","Modal","Component","toggleModal","e","target","id","props","toggle","render","show","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACjDC,WADiD,GACnCC,CAAC,IAAI;AACjB,UAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,aAAKC,KAAL,CAAWC,MAAX;AACD;AACF,KALgD;AAAA;;AAOjDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKF,KAAL,CAAWG,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;;AACD,WACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,OAAO,EAAEN,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKG,KAAL,CAAWI,QADd,CADF,CADF;AAOD;;AAlBgD","sourcesContent":["import React from 'react';\nimport '../Modal/Modal.css';\n\nexport default class Modal extends React.Component {\n  toggleModal = e => {\n    if (e.target.id === 'modalBG') {\n      this.props.toggle();\n    }\n  };\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div id=\"modalBG\" className=\"modal-background \">\n        <div className=\"modal-container\" onClick={e => this.toggleModal(e)}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}