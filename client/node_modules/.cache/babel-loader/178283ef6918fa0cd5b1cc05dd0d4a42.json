{"ast":null,"code":"import _defineProperty from \"/Users/Simon/Desktop/Coding/websocket-test/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Test/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport '../Modals/Modal/Modal.css';\nimport Modal from '../Modals/Modal';\nimport { toggleState, updateObjById } from '../../helper';\nexport default class Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showModal: false,\n      item: [{\n        id: 1,\n        name: 'Replace Me',\n        job: 'Nothing'\n      }, {\n        id: 2,\n        name: 'Dont touch me',\n        job: 'VIP'\n      }, {\n        id: 3,\n        name: 'Mr. Important',\n        job: 'CEO'\n      }],\n      selected: {}\n    };\n    this.updateOrder = updateObjById('item');\n\n    this.toggle = () => {\n      this.setState(toggleState('showModal'));\n      this.setState(this.updateOrder(this.state.selected.id, this.state.selected));\n    };\n  }\n\n  componentDidMount() {\n    this.setState(this.updateOrder(1, {\n      id: 1,\n      name: 'test'\n    }));\n  }\n\n  selectItem(id) {\n    const item = this.state.item.filter(e => e.id === Number(id));\n    console.log(item);\n    this.setState({\n      selected: item[0]\n    });\n    this.toggle();\n  }\n\n  handleOnChange(e) {\n    const _e$target = e.target,\n          id = _e$target.id,\n          value = _e$target.value;\n    this.setState(prevState => _objectSpread({}, prevState, {\n      selected: _objectSpread({}, prevState.selected, {\n        [id]: value\n      })\n    }));\n  }\n\n  onModalClose(id, update) {\n    this.setState(this.updateOrder(id, update));\n    this.toggle();\n  }\n\n  renderList(arr) {\n    return arr.map(e => React.createElement(\"div\", {\n      key: e.id,\n      id: e.id,\n      className: \"input\",\n      onClick: e => this.selectItem(e.target.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, e.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, e.job)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Test Component\"), this.renderList(this.state.item), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"This component is for testing.\"), React.createElement(Modal, {\n      toggle: this.toggle,\n      show: this.state.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"col s12\",\n      onChange: e => {\n        this.handleOnChange(e);\n      } //onSubmit={e => this.handleOnSubmit(e)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row modal-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"job\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.selected.job,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"orderCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Amount\")), React.createElement(\"div\", {\n      className: \"input-field col s9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.selected.name,\n      readonly: \"readonly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"orderItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Order Title\"))), React.createElement(\"button\", {\n      className: \"btn waves-effect red darken-3 waves-light\",\n      name: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n} // const incrementCounter = key => {\n//   return function(state) {\n//     return { [key]: state[key] };\n//   };\n// };","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Test/index.js"],"names":["React","Component","Modal","toggleState","updateObjById","Test","state","showModal","item","id","name","job","selected","updateOrder","toggle","setState","componentDidMount","selectItem","filter","e","Number","console","log","handleOnChange","target","value","prevState","onModalClose","update","renderList","arr","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Modals/Modal/Modal.css';\n\nimport Modal from '../Modals/Modal';\nimport { toggleState, updateObjById } from '../../helper';\n\nexport default class Test extends Component {\n  state = {\n    showModal: false,\n    item: [\n      { id: 1, name: 'Replace Me', job: 'Nothing' },\n      { id: 2, name: 'Dont touch me', job: 'VIP' },\n      { id: 3, name: 'Mr. Important', job: 'CEO' }\n    ],\n    selected: {}\n  };\n\n  //Pass id of item and new data as object\n  updateOrder = updateObjById('item');\n\n  componentDidMount() {\n    this.setState(this.updateOrder(1, { id: 1, name: 'test' }));\n  }\n\n  toggle = () => {\n    this.setState(toggleState('showModal'));\n    this.setState(this.updateOrder(this.state.selected.id, this.state.selected));\n  };\n\n  selectItem(id) {\n    const item = this.state.item.filter(e => e.id === Number(id));\n    console.log(item);\n    this.setState({ selected: item[0] });\n    this.toggle();\n  }\n\n  handleOnChange(e) {\n    const { id, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      selected: { ...prevState.selected, [id]: value }\n    }));\n  }\n\n  onModalClose(id, update) {\n    this.setState(this.updateOrder(id, update));\n    this.toggle();\n  }\n\n  renderList(arr) {\n    return arr.map(e => (\n      <div key={e.id} id={e.id} className=\"input\" onClick={e => this.selectItem(e.target.id)}>\n        <p>{e.name}</p>\n        <p>{e.job}</p>\n      </div>\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n        {this.renderList(this.state.item)}\n        <p>This component is for testing.</p>\n        <Modal toggle={this.toggle} show={this.state.showModal}>\n          <form\n            className=\"col s12\"\n            onChange={e => {\n              this.handleOnChange(e);\n            }}\n            //onSubmit={e => this.handleOnSubmit(e)}\n          >\n            <div className=\"row modal-row\">\n              <div className=\"input-field col s3\">\n                <input id=\"job\" type=\"text\" className=\"validate\" value={this.state.selected.job} />\n                <label className=\"active\" htmlFor=\"orderCount\">\n                  Amount\n                </label>\n              </div>\n              <div className=\"input-field col s9\">\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className=\"validate\"\n                  value={this.state.selected.name}\n                  readonly=\"readonly\"\n                />\n                <label className=\"active\" htmlFor=\"orderItem\">\n                  Order Title\n                </label>\n              </div>\n            </div>\n            <button className=\"btn waves-effect red darken-3 waves-light\" name=\"action\">\n              Delete\n            </button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n// const incrementCounter = key => {\n//   return function(state) {\n//     return { [key]: state[key] };\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}