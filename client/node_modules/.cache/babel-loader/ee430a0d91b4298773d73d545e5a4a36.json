{"ast":null,"code":"import _slicedToArray from \"/Users/Simon/Desktop/Coding/websocket-test/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Modals/Modal/index.js\";\nimport React, { useState } from 'react';\n\nconst Modal = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const toggle = e => {\n    if (e.target.id == 'modalBg') {\n      setIsOpen(!isOpen);\n    }\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    id: \"modalBg\",\n    className: \"modal-background\",\n    onClick: e => toggle(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Modals/Modal/index.js"],"names":["React","useState","Modal","props","isOpen","setIsOpen","toggle","e","target","id","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA,oBACOF,QAAQ,CAAC,KAAD,CADf;AAAA;AAAA,QACdG,MADc;AAAA,QACNC,SADM;;AAGrB,QAAMC,MAAM,GAAGC,CAAC,IAAI;AAClB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,IAAe,SAAnB,EAA8B;AAC5BJ,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;AACF,GAJD;;AAMA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AACD,SACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAA+C,IAAA,OAAO,EAAEG,CAAC,IAAID,MAAM,CAACC,CAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCJ,KAAK,CAACO,QAAxC,CADF,CADF;AAKD,CAjBD;;AAmBA,eAAeR,KAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Modal = props => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = e => {\n    if (e.target.id == 'modalBg') {\n      setIsOpen(!isOpen);\n    }\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n  return (\n    <div id=\"modalBg\" className=\"modal-background\" onClick={e => toggle(e)}>\n      <div className=\"modal-container\">{props.children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}