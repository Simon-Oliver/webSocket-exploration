{"ast":null,"code":"// Higher Order Function\n// Define key and then takes state object and return opposite boolean\nexport const toggleState = key => {\n  return state => {\n    return {\n      [key]: !state[key]\n    };\n  };\n};\nexport const updateObjById = key => {\n  return (id, update) => {\n    return state => {\n      const updatedState = state[key].map(e => e.id === id ? e = update : e);\n      console.log(\"Object is \".concat(key, \". Item ID is \").concat(id, \". Data to update is \").concat(update, \". State is \").concat(state));\n    };\n  };\n};","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/websocket-test/client/src/helper/index.js"],"names":["toggleState","key","state","updateObjById","id","update","updatedState","map","e","console","log"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,WAAW,GAAGC,GAAG,IAAI;AAChC,SAAOC,KAAK,IAAI;AACd,WAAO;AAAE,OAACD,GAAD,GAAO,CAACC,KAAK,CAACD,GAAD;AAAf,KAAP;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAME,aAAa,GAAGF,GAAG,IAAI;AAClC,SAAO,CAACG,EAAD,EAAKC,MAAL,KAAgB;AACrB,WAAOH,KAAK,IAAI;AACd,YAAMI,YAAY,GAAGJ,KAAK,CAACD,GAAD,CAAL,CAAWM,GAAX,CAAeC,CAAC,IAAKA,CAAC,CAACJ,EAAF,KAASA,EAAT,GAAeI,CAAC,GAAGH,MAAnB,GAA6BG,CAAlD,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,qBACeT,GADf,0BACkCG,EADlC,iCAC2DC,MAD3D,wBAC+EH,KAD/E;AAGD,KALD;AAMD,GAPD;AAQD,CATM","sourcesContent":["// Higher Order Function\n// Define key and then takes state object and return opposite boolean\nexport const toggleState = key => {\n  return state => {\n    return { [key]: !state[key] };\n  };\n};\n\nexport const updateObjById = key => {\n  return (id, update) => {\n    return state => {\n      const updatedState = state[key].map(e => (e.id === id ? (e = update) : e));\n      console.log(\n        `Object is ${key}. Item ID is ${id}. Data to update is ${update}. State is ${state}`\n      );\n    };\n  };\n};\n"]},"metadata":{},"sourceType":"module"}