{"ast":null,"code":"import _defineProperty from \"/Users/Simon/Desktop/Coding/websocket-test/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Modals/EditOrderModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './EditOrder.css';\nexport default class EditOrderModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      qnt: '',\n      item: ''\n    };\n\n    this.handleChange = e => {\n      const key = e.target.id;\n      const data = e.target.value;\n      this.setState(prevState => _objectSpread({}, prevState, {\n        [key]: data\n      }));\n    };\n  }\n\n  componentDidMount() {\n    console.log('props Modal', this.props.selectedItem);\n    this.setState(_objectSpread({}, this.props.selectedItem));\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          children = _this$props.children,\n          updateOrder = _this$props.updateOrder,\n          toggleModal = _this$props.toggleModal;\n    return React.createElement(\"div\", {\n      id: \"modalBg\",\n      className: isOpen ? 'edit-order-modal' : 'edit-order-modal modal-close',\n      onClick: e => {\n        // updateOrder(null, '____Test Modal____');\n        if (e.target.id == 'modalBg') {\n          toggleModal();\n          updateOrder(this.state.id, this.state.qnt);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"edit-order-modal-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"col s12\",\n      onChange: e => {\n        this.handleChange(e);\n      } //onSubmit={e => this.handleOnSubmit(e)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row modal-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"qnt\",\n      type: \"number\",\n      className: \"validate\",\n      value: this.state.qnt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"orderCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Amount\")), React.createElement(\"div\", {\n      className: \"input-field col s9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"item\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.item,\n      readonly: \"readonly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"orderItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Order Title\")), React.createElement(\"button\", {\n      class: \"btn waves-effect red darken-3 waves-light\",\n      name: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/websocket-test/client/src/Components/Modals/EditOrderModal.js"],"names":["React","Component","EditOrderModal","state","id","qnt","item","handleChange","e","key","target","data","value","setState","prevState","componentDidMount","console","log","props","selectedItem","render","isOpen","children","updateOrder","toggleModal"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDE,KADoD,GAC5C;AACNC,MAAAA,EAAE,EAAE,EADE;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAD4C;;AAAA,SAYpDC,YAZoD,GAYrCC,CAAC,IAAI;AAClB,YAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASN,EAArB;AACA,YAAMO,IAAI,GAAGH,CAAC,CAACE,MAAF,CAASE,KAAtB;AACA,WAAKC,QAAL,CAAcC,SAAS,sBAAUA,SAAV;AAAqB,SAACL,GAAD,GAAOE;AAA5B,QAAvB;AACD,KAhBmD;AAAA;;AAOpDI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,KAAL,CAAWC,YAAtC;AACA,SAAKN,QAAL,mBAAmB,KAAKK,KAAL,CAAWC,YAA9B;AACD;;AAQDC,EAAAA,MAAM,GAAG;AAAA,wBACgD,KAAKF,KADrD;AAAA,UACCG,MADD,eACCA,MADD;AAAA,UACSC,QADT,eACSA,QADT;AAAA,UACmBC,WADnB,eACmBA,WADnB;AAAA,UACgCC,WADhC,eACgCA,WADhC;AAEP,WACE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,SAAS,EAAEH,MAAM,GAAG,kBAAH,GAAwB,8BAF3C;AAGE,MAAA,OAAO,EAAEb,CAAC,IAAI;AACZ;AACA,YAAIA,CAAC,CAACE,MAAF,CAASN,EAAT,IAAe,SAAnB,EAA8B;AAC5BoB,UAAAA,WAAW;AACXD,UAAAA,WAAW,CAAC,KAAKpB,KAAL,CAAWC,EAAZ,EAAgB,KAAKD,KAAL,CAAWE,GAA3B,CAAX;AACD;AACF,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACb,aAAKD,YAAL,CAAkBC,CAAlB;AACD,OAJH,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,KAAV;AAAgB,MAAA,IAAI,EAAC,QAArB;AAA8B,MAAA,SAAS,EAAC,UAAxC;AAAmD,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,UAHZ;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,IAJpB;AAKE,MAAA,QAAQ,EAAC,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,CAPF,EAmBE;AAAQ,MAAA,KAAK,EAAC,2CAAd;AAA0D,MAAA,IAAI,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CAPF,CADF,CAXF,CADF;AA+CD;;AAnEmD","sourcesContent":["import React, { Component } from 'react';\nimport './EditOrder.css';\n\nexport default class EditOrderModal extends Component {\n  state = {\n    id: '',\n    qnt: '',\n    item: ''\n  };\n\n  componentDidMount() {\n    console.log('props Modal', this.props.selectedItem);\n    this.setState({ ...this.props.selectedItem });\n  }\n\n  handleChange = e => {\n    const key = e.target.id;\n    const data = e.target.value;\n    this.setState(prevState => ({ ...prevState, [key]: data }));\n  };\n\n  render() {\n    const { isOpen, children, updateOrder, toggleModal } = this.props;\n    return (\n      <div\n        id=\"modalBg\"\n        className={isOpen ? 'edit-order-modal' : 'edit-order-modal modal-close'}\n        onClick={e => {\n          // updateOrder(null, '____Test Modal____');\n          if (e.target.id == 'modalBg') {\n            toggleModal();\n            updateOrder(this.state.id, this.state.qnt);\n          }\n        }}\n      >\n        <div className=\"edit-order-modal-container\">\n          <form\n            className=\"col s12\"\n            onChange={e => {\n              this.handleChange(e);\n            }}\n            //onSubmit={e => this.handleOnSubmit(e)}\n          >\n            <div className=\"row modal-row\">\n              <div className=\"input-field col s3\">\n                <input id=\"qnt\" type=\"number\" className=\"validate\" value={this.state.qnt} />\n                <label className=\"active\" htmlFor=\"orderCount\">\n                  Amount\n                </label>\n              </div>\n              <div className=\"input-field col s9\">\n                <input\n                  id=\"item\"\n                  type=\"text\"\n                  className=\"validate\"\n                  value={this.state.item}\n                  readonly=\"readonly\"\n                />\n                <label className=\"active\" htmlFor=\"orderItem\">\n                  Order Title\n                </label>\n              </div>\n              <button class=\"btn waves-effect red darken-3 waves-light\" name=\"action\">\n                Delete\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}